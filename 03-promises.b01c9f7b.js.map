{"mappings":"igBAkBA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAUP,SAASQ,EAAUC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC7BU,EAAAC,OAAOC,QAAQ,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,OAC3Dc,QAAMC,IAAIhB,E,CAGd,SAASiB,EAASP,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC5BU,EAAAC,OAAOM,QAAQ,sBAAqCJ,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,CAxC/CkB,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAMC,EAAY,CAChBvB,MAAOwB,OAAOH,EAAII,OAAOC,SAAS1B,MAAM2B,OACxCC,KAAMJ,OAAOH,EAAII,OAAOC,SAASE,KAAKD,OACtCE,OAAQL,OAAOH,EAAII,OAAOC,SAASG,OAAOF,SAkB9C,SAAoB3B,EAAO4B,EAAMC,GAC/B,IAAK,IAAIC,EAAI,EAAGC,EAAa/B,EAAO8B,GAAKD,EAAQC,GAAK,EAAGC,GAAcH,EACrE9B,EAAcgC,EAAGC,GAAYC,KAAKxB,GAAWyB,MAAMjB,E,CAlBrDkB,CAAWX,EAAUvB,MAAOuB,EAAUK,KAAML,EAAUM,O","sources":["src/js/03-promises.js"],"sourcesContent":["import '../css/common.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const inputDate = {\n    delay: Number(evt.target.elements.delay.value),\n    step: Number(evt.target.elements.step.value),\n    amount: Number(evt.target.elements.amount.value),\n  };\n  runPromise(inputDate.delay, inputDate.step, inputDate.amount);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction runPromise(delay, step, amount) {\n  for (let i = 1, innerDelay = delay; i <= amount; i += 1, innerDelay += step) {\n    createPromise(i, innerDelay).then(onResolve).catch(onReject);\n  }\n}\n\nfunction onResolve({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  console.log(position);\n}\n\nfunction onReject({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$onResolve","param","$h6c0i","Notify","success","concat","console","log","$ce04d3a99e08e73b$var$onReject","failure","document","querySelector","addEventListener","evt","preventDefault","inputDate","Number","target","elements","value","step","amount","i","innerDelay","then","catch","$ce04d3a99e08e73b$var$runPromise"],"version":3,"file":"03-promises.b01c9f7b.js.map"}